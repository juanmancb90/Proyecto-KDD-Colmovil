/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import com.toedter.calendar.JDateChooser;
import controladorBD.*;
import controladorDatos.controladorDatos;
import controladorGraficas.*;
import java.awt.BorderLayout;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
/**
 *
 * @author User
 **/
public class userInterface extends javax.swing.JFrame {

    /**
     * Creates new form userInteface
     */
    public userInterface() {
        initComponents();
        jPContainer.setVisible(false);
        FechainicioPerfil.setEnabled(false);
        FechafinPerfil.setEnabled(false);
        jCheckPerfilFecha.setEnabled(false);
        jComboPerfilEstado.setEnabled(false);
        jComboPerfilEdad.setEnabled(false);
        jComboPerfilEstrato.setEnabled(false);
        jComboPerfilGenero.setEnabled(false);
        jComboPerfilFiltro.setEnabled(false);
        jChecPerfilCausa.setEnabled(false);
        jComboPerfilOpciones.setEnabled(false);
        jButtonPerfilResultado.setEnabled(false);
        jCheckPlanesFecha.setEnabled(true);
        jComboPlanesFiltro.setEnabled(false);
        Fechainicioplan.setEnabled(false);
        Fechafinplan.setEnabled(false);
        jComboPlanesAno.setEnabled(false);
        jComboPlanesMes.setEnabled(false);
        jButtonPlanesResultado.setEnabled(true);
        jButtonLlamadaResultado.setEnabled(true);
        jComboLlamadaAno.setEnabled(false);
        jComboLlamadaDia.setEnabled(false);
        jComboLlamadaMes.setEnabled(false);
        jComboLlamadaFiltro.setEnabled(false);
        jCheckLlamadasFecha.setEnabled(true);
        jComboGraficaPlan.setEnabled(false);
        jComboGraficaLlamada.setEnabled(false);
        
    }
    
    graficoBarras graph;
    graficoTorta pie;
    String query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan AND p.tipo_plan = 'Prepago' INNER JOIN bodegacolmovil.dimension_cliente cl ON c.key_demografia = cl.key_cliente and cl.genero = 'Masculino' INNER JOIN bodegacolmovil.dimension_demografia d ON c.key_demografia = d.key_dimension_demografia and d.estrato = '1' and d.estado_civil = 'Soltero' where d.edad between '15' and 20'";
    String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan AND p.tipo_plan = 'Prepago' INNER JOIN bodegacolmovil.dimension_cliente cl ON c.key_demografia = cl.key_cliente and cl.genero = 'Masculino' INNER JOIN bodegacolmovil.dimension_demografia d ON c.key_demografia = d.key_dimension_demografia and d.estrato = '1' and d.estado_civil = 'Soltero' where d.edad between '15' and 20'";
    String mensaje = "Perfil 1", mensaje2="Perfil 2", criterio="bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan", opcion="p.tipo_plan = 'Prepago'";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jFCExplorador = new javax.swing.JFileChooser();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPContainer = new javax.swing.JPanel();
        jPControl = new javax.swing.JPanel();
        jTPControles = new javax.swing.JTabbedPane();
        jPContratos = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabelPlanCriterio = new javax.swing.JLabel();
        jComboPlanesCriterio = new javax.swing.JComboBox();
        jSeparator3 = new javax.swing.JSeparator();
        jCheckPlanesFecha = new javax.swing.JCheckBox();
        Fechainicioplan = new com.toedter.calendar.JDateChooser();
        jLabeInicioPlan = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Fechafinplan = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        jComboPlanesAno = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jComboPlanesMes = new javax.swing.JComboBox();
        jButtonPlanesReset = new javax.swing.JButton();
        jButtonPlanesResultado = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jComboPlanesFiltro = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jComboGraficaPlan = new javax.swing.JComboBox();
        jPRecargas = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jComboLlamadasCriterio = new javax.swing.JComboBox();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel22 = new javax.swing.JLabel();
        jComboLlamadaAno = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jCheckLlamadasFecha = new javax.swing.JCheckBox();
        jButtonLlamadaReset = new javax.swing.JButton();
        jButtonLlamadaResultado = new javax.swing.JButton();
        jComboLlamadaFiltro = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboLlamadaMes = new javax.swing.JComboBox();
        jComboLlamadaDia = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        jComboGraficaLlamada = new javax.swing.JComboBox();
        jPFechas = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jComboPerfilCriterio = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboPerfilFiltro = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        jComboPerfilGenero = new javax.swing.JComboBox();
        jComboPerfilEstado = new javax.swing.JComboBox();
        jComboPerfilEdad = new javax.swing.JComboBox();
        jComboPerfilEstrato = new javax.swing.JComboBox();
        jCheckPerfilFecha = new javax.swing.JCheckBox();
        jComboPerfilOpciones = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jChecPerfilCausa = new javax.swing.JCheckBox();
        jComboNumPerfil = new javax.swing.JComboBox();
        jButtonPerfilReset = new javax.swing.JButton();
        jButtonPerfilResultado = new javax.swing.JButton();
        FechainicioPerfil = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        FechafinPerfil = new com.toedter.calendar.JDateChooser();
        jSeparator4 = new javax.swing.JSeparator();
        jComboGraficaPerfil = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jButtonGuardar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaResultados = new javax.swing.JTextArea();
        jLabel27 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMFile = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMEdit = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proyecto-KDD");
        setBackground(new java.awt.Color(206, 248, 250));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jFCExplorador.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel4)))
                .addGap(468, 468, 468)
                .addComponent(jFCExplorador, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jFCExplorador, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPContainer.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados"));
        jPContainer.setPreferredSize(new java.awt.Dimension(800, 400));

        javax.swing.GroupLayout jPContainerLayout = new javax.swing.GroupLayout(jPContainer);
        jPContainer.setLayout(jPContainerLayout);
        jPContainerLayout.setHorizontalGroup(
            jPContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 656, Short.MAX_VALUE)
        );
        jPContainerLayout.setVerticalGroup(
            jPContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 583, Short.MAX_VALUE)
        );

        jPControl.setBorder(javax.swing.BorderFactory.createTitledBorder("Controles"));

        jLabelPlanCriterio.setText("CRITERIO DE SELECCION");

        jComboPlanesCriterio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tipo_plan", "Planes_voz", "Planes_datos", "Planes_corporativos" }));
        jComboPlanesCriterio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboPlanesCriterioActionPerformed(evt);
            }
        });

        jCheckPlanesFecha.setText("Filtrar por Fecha");
        jCheckPlanesFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckPlanesFechaActionPerformed(evt);
            }
        });

        jLabeInicioPlan.setText("Fecha Inicio");

        jLabel6.setText("Fecha Fin");

        jLabel18.setText("Año");

        jComboPlanesAno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009\t\t" }));
        jComboPlanesAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboPlanesAnoActionPerformed(evt);
            }
        });

        jLabel19.setText("Mes");

        jComboPlanesMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        jButtonPlanesReset.setText("Reset");
        jButtonPlanesReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlanesResetActionPerformed(evt);
            }
        });

        jButtonPlanesResultado.setText("Resultado");
        jButtonPlanesResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlanesResultadoActionPerformed(evt);
            }
        });

        jLabel16.setText("Filtrar por:");

        jComboPlanesFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Rango", "Año", "Año y Mes" }));
        jComboPlanesFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboPlanesFiltroActionPerformed(evt);
            }
        });

        jLabel21.setText("Tipo Grafico");

        jComboGraficaPlan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Barras", "Torta" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabelPlanCriterio)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckPlanesFecha)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabeInicioPlan)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(Fechainicioplan, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(Fechafinplan, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                                        .addComponent(jComboPlanesAno, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel19)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jComboPlanesMes, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(36, 36, 36))
                                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addGap(13, 13, 13)
                                                                .addComponent(jButtonPlanesReset)
                                                                .addGap(30, 30, 30)
                                                                .addComponent(jButtonPlanesResultado))
                                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jLabel21)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jComboGraficaPlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(139, 139, 139)
                                .addComponent(jComboPlanesCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboPlanesFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabelPlanCriterio)
                .addGap(12, 12, 12)
                .addComponent(jComboPlanesCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jCheckPlanesFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(jComboPlanesFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabeInicioPlan)
                                    .addComponent(Fechainicioplan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(Fechafinplan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboPlanesAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jComboPlanesMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(jComboGraficaPlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 75, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonPlanesResultado)
                            .addComponent(jButtonPlanesReset))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPContratosLayout = new javax.swing.GroupLayout(jPContratos);
        jPContratos.setLayout(jPContratosLayout);
        jPContratosLayout.setHorizontalGroup(
            jPContratosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPContratosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPContratosLayout.setVerticalGroup(
            jPContratosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContratosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTPControles.addTab("PLANES", jPContratos);

        jLabel23.setText("CRITERIO DE SELECCION");

        jComboLlamadasCriterio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Operador", "Franja" }));
        jComboLlamadasCriterio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboLlamadasCriterioActionPerformed(evt);
            }
        });

        jLabel22.setText("Año");

        jComboLlamadaAno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009" }));

        jLabel25.setText("Dia");

        jCheckLlamadasFecha.setText("Filtrar por Fecha");
        jCheckLlamadasFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckLlamadasFechaActionPerformed(evt);
            }
        });

        jButtonLlamadaReset.setText("Reset");
        jButtonLlamadaReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLlamadaResetActionPerformed(evt);
            }
        });

        jButtonLlamadaResultado.setText("Resultado");
        jButtonLlamadaResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLlamadaResultadoActionPerformed(evt);
            }
        });

        jComboLlamadaFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Año", "Año y Mes", "Año, Mes y Dia" }));
        jComboLlamadaFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboLlamadaFiltroActionPerformed(evt);
            }
        });

        jLabel26.setText("Mes");

        jLabel5.setText("Filtrar Por:");

        jComboLlamadaMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        jComboLlamadaDia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo" }));

        jLabel24.setText("Tipo Grafico");

        jComboGraficaLlamada.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Barra", "Torta" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jComboLlamadasCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addComponent(jButtonLlamadaReset)
                .addGap(18, 18, 18)
                .addComponent(jButtonLlamadaResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckLlamadasFecha)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel26)
                                            .addComponent(jLabel22)
                                            .addComponent(jLabel25)))
                                    .addComponent(jComboLlamadaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel24)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jComboLlamadaDia, 0, 99, Short.MAX_VALUE)
                                            .addComponent(jComboLlamadaMes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jComboLlamadaAno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jComboGraficaLlamada, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 130, Short.MAX_VALUE))
                    .addComponent(jSeparator5))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel23)
                .addGap(8, 8, 8)
                .addComponent(jComboLlamadasCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCheckLlamadasFecha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboLlamadaFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboLlamadaAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jComboLlamadaMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jComboLlamadaDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jComboGraficaLlamada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLlamadaReset)
                    .addComponent(jButtonLlamadaResultado))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPRecargasLayout = new javax.swing.GroupLayout(jPRecargas);
        jPRecargas.setLayout(jPRecargasLayout);
        jPRecargasLayout.setHorizontalGroup(
            jPRecargasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPRecargasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPRecargasLayout.setVerticalGroup(
            jPRecargasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPRecargasLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTPControles.addTab("LLAMADAS", jPRecargas);

        jLabel9.setText("CRITERIO DE SELECCION:");

        jComboPerfilCriterio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Plan", "Tipo_plan", "Roaming", "Estado" }));
        jComboPerfilCriterio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboPerfilCriterioActionPerformed(evt);
            }
        });

        jLabel10.setText("PERFIL");

        jLabel7.setText("Estado Civil");

        jLabel8.setText("Edad");

        jLabel11.setText("Estrato");

        jLabel12.setText("Genero");

        jLabel13.setText("FItrar Por:");

        jComboPerfilFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Genero", "Estado Civil", "Edad", "Estrato" }));
        jComboPerfilFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboPerfilFiltroActionPerformed(evt);
            }
        });

        jComboPerfilGenero.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Femenino" }));

        jComboPerfilEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Casado", "Soltero", "Viudo", "Union Libre", "Divorciado" }));

        jComboPerfilEdad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "15-20", "21-25", "26-30", "31-35", "36-40", "41-45" }));

        jComboPerfilEstrato.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4 ", "5", "6 " }));

        jCheckPerfilFecha.setText("Filtrar por Fecha");
        jCheckPerfilFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckPerfilFechaActionPerformed(evt);
            }
        });

        jComboPerfilOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboPerfilOpcionesActionPerformed(evt);
            }
        });

        jLabel17.setText("Opciones:");

        jChecPerfilCausa.setText("Causa Retiro");
        jChecPerfilCausa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChecPerfilCausaActionPerformed(evt);
            }
        });

        jComboNumPerfil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Perfil 1", "Perfil 2" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel10))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckPerfilFecha)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(22, 22, 22))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboPerfilGenero, 0, 108, Short.MAX_VALUE)
                                    .addComponent(jComboPerfilEdad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(jComboPerfilFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboPerfilEstado, 0, 108, Short.MAX_VALUE)
                                    .addComponent(jComboPerfilEstrato, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jComboNumPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jChecPerfilCausa)))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboPerfilCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboPerfilOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboPerfilCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboPerfilOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jComboPerfilFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jChecPerfilCausa)
                    .addComponent(jComboNumPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jComboPerfilEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(jComboPerfilEstrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jComboPerfilEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jComboPerfilGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jCheckPerfilFecha)
                .addContainerGap())
        );

        jButtonPerfilReset.setText("Reset");
        jButtonPerfilReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPerfilResetActionPerformed(evt);
            }
        });

        jButtonPerfilResultado.setText("Resultado");
        jButtonPerfilResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPerfilResultadoActionPerformed(evt);
            }
        });

        jLabel14.setText("Fecha Inicio");

        jLabel15.setText("Fecha Fin");

        jComboGraficaPerfil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "barras", "torta" }));

        jLabel20.setText("Tipo Grafico");

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPFechasLayout = new javax.swing.GroupLayout(jPFechas);
        jPFechas.setLayout(jPFechasLayout);
        jPFechasLayout.setHorizontalGroup(
            jPFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFechasLayout.createSequentialGroup()
                .addGroup(jPFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPFechasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPFechasLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboGraficaPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonPerfilReset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonPerfilResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23))
                            .addGroup(jPFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPFechasLayout.createSequentialGroup()
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(FechainicioPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15)
                                    .addGap(18, 18, 18)
                                    .addComponent(FechafinPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        jPFechasLayout.setVerticalGroup(
            jPFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFechasLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(jPFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(FechainicioPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FechafinPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addGap(23, 23, 23)
                .addGroup(jPFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPFechasLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(jPFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonPerfilResultado)
                            .addComponent(jButtonPerfilReset)
                            .addComponent(jButtonGuardar)))
                    .addGroup(jPFechasLayout.createSequentialGroup()
                        .addGroup(jPFechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jComboGraficaPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTPControles.addTab("PERFIL", jPFechas);

        javax.swing.GroupLayout jPControlLayout = new javax.swing.GroupLayout(jPControl);
        jPControl.setLayout(jPControlLayout);
        jPControlLayout.setHorizontalGroup(
            jPControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPControlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTPControles, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPControlLayout.setVerticalGroup(
            jPControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPControlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTPControles, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        jTPControles.getAccessibleContext().setAccessibleName("Perfil");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Proyecto-KDD-Visualizador");

        jTextAreaResultados.setColumns(20);
        jTextAreaResultados.setRows(5);
        jScrollPane1.setViewportView(jTextAreaResultados);

        jLabel27.setText("Resultados:");

        jMFile.setText("Archivo");

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMFile.add(jMenuItem1);

        jMenuBar1.add(jMFile);

        jMEdit.setText("Editar");

        jMenuItem2.setText("Acerca del Software");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMEdit.add(jMenuItem2);

        jMenuBar1.add(jMEdit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)))
                .addComponent(jPContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(357, 357, 357)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPControl, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Herramienta ETL-PRoyecto KDD-Colmovil\n\n"
                + "Desarrollado por: \n\n"
                + "Denilson Basante\n"
                + "Julian Bravo\n"
                + "Juan Manuel Chaguendo\n\n"
                + "Universidad del valle");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButtonPerfilResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPerfilResultadoActionPerformed

       
          switch(jComboPerfilCriterio.getSelectedIndex()){
              
              case 0:{
                  
                  
                  if(jComboPerfilOpciones.getSelectedIndex() == 0){
                  
                  
                   switch(jComboPerfilFiltro.getSelectedIndex()){
                        
                        
                            case 0:{
                            
                            
                                /*aqui hay que guardan las variables del perfil en un arreglo para despeus ser utilizadas en la consulta
                                 i se hace un condicional para esa consult
                                ¨*/
                                
                                if(jCheckPerfilFecha.isSelected()){
                                
                                 System.out.println("graficar plan - prepago -  todos - rango");
                                
                                }else{
                                
                                System.out.println("graficar plan - prepago -  todos - sin fecha");
                                
                                
                                
                                System.out.println(query);
                    
                    
                                functionGraphuniqueSerie(query, query2, jComboGraficaPerfil, mensaje, mensaje2);
                                  //FunctionGraphTwoSeries(query, query, jComboGraficaPlan);
                                }
                                
                                
                                
                            break;
                            }
                              
                                
                            case 1:{
                            
                                System.out.println("graficar plan - prepago -  genero ");
                                
                                String query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan AND p.tipo_plan = 'Prepago' INNER JOIN bodegacolmovil.dimension_cliente cl ON c.key_demografia = cl.key_cliente and cl.genero = 'Masculino' ";
                                String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan AND p.tipo_plan = 'Prepago' INNER JOIN bodegacolmovil.dimension_cliente cl ON c.key_demografia = cl.key_cliente and cl.genero = 'Femenino'";
   
                                FunctionGraphTwoSeries(query, query2, jComboGraficaPerfil, "Masculino", "Femenino" );
                            
                            break;
                            }
                                
                            case 2:{
                                
                                System.out.println("graficar plan - prepago -  estado civil ");
                                
                                String query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan AND p.tipo_plan = 'Prepago' INNER JOIN bodegacolmovil.dimension_demografia cl ON c.key_demografia = cl.key_dimension_demografia and cl.estado_civil = 'Casado\r' ";
                                String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan AND p.tipo_plan = 'Prepago' INNER JOIN bodegacolmovil.dimension_demografia cl ON c.key_demografia = cl.key_dimension_demografia and cl.estado_civil = 'Soltero\r'";
                                String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan AND p.tipo_plan = 'Prepago' INNER JOIN bodegacolmovil.dimension_demografia cl ON c.key_demografia = cl.key_dimension_demografia and cl.estado_civil = 'Viudo\r'";
                                String query4="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan AND p.tipo_plan = 'Prepago' INNER JOIN bodegacolmovil.dimension_demografia cl ON c.key_demografia = cl.key_dimension_demografia and cl.estado_civil = 'Union Libre\r'";
                                String query5="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan AND p.tipo_plan = 'Prepago' INNER JOIN bodegacolmovil.dimension_demografia cl ON c.key_demografia = cl.key_dimension_demografia and cl.estado_civil = 'Divorciado\r'";
                                
                                
                                functionGraphFiveSeries(query, query2, query3, query4, query5, "Soltero", "Casado", "Union Libre", "Viudo", mensaje5, "Comparacion Perfil Estado Civil");
                            
                                
                            
                            break;
                            }
                                
                            case 3:{
                                
                                System.out.println("graficar plan - prepago -  edad ");
                            
                            break;
                            }
                                
                            case 4:{
                                
                                System.out.println("graficar plan - prepago -  estrato ");
                            
                            break;
                            }    
   
                        }//fin if 0 = prepago   
                      
                      
                  
                  
                  }else if(jComboPerfilOpciones.getSelectedIndex() == 1){
                  
                           
                        switch(jComboPerfilFiltro.getSelectedIndex()){
                        
                        
                            case 0:{
                            
                            if(jCheckPerfilFecha.isSelected()){
                                
                                 System.out.println("graficar plan - postpago -  todos - rango");
                                
                                }else{
                                
                                System.out.println("graficar plan - postpago -  todos - sin fecha");
                                    
                                }
                            break;
                            }
                              
                                
                            case 1:{
                            
                                System.out.println("graficar plan - postpago -  genero ");
                            
                            break;
                            }
                                
                            case 2:{
                                
                                System.out.println("graficar plan - postpago -  estado civil ");
                            
                            break;
                            }
                                
                            case 3:{
                                
                                System.out.println("graficar plan - postpago -  edad ");
                            
                            break;
                            }
                                
                            case 4:{
                                
                                System.out.println("graficar plan - postpago -  estrato ");
                            
                            break;
                            }    
                        
                        
                        }
                    
                     
                     }//fin if 1 = postpago 
                  
                  
                  break;
                  
                  
                  }//fin case 0 = plan
                  
                  
                  
                  
              
              
                  
              case 1:{
                  
                  
                  if(jComboPerfilOpciones.getSelectedIndex() == 0){
                  
                  
                   switch(jComboPerfilFiltro.getSelectedIndex()){
                        
                        
                            case 0:{
                            
                            if(jCheckPerfilFecha.isSelected()){
                                
                                 System.out.println("graficar tipo_plan - plan datos -  todos - rango");
                                
                                }else{
                                
                                System.out.println("graficar tipo_plan - plan datos - sin fecha");
                                    
                                }
                            
                            break;
                            }
                              
                                
                            case 1:{
                            
                                System.out.println("graficar tipo_plan - plan datos -  genero ");
                            
                            break;
                            }
                                
                            case 2:{
                                
                                System.out.println("graficar tipo_plan - plan datos -  estado civil ");
                            
                            break;
                            }
                                
                            case 3:{
                                
                                System.out.println("graficar tipo_plan - plan datos -  edad ");
                            
                            break;
                            }
                                
                            case 4:{
                                
                                System.out.println("graficar tipo_plan - plan datos -  estrato ");
                            
                            break;
                            }    
   
                        }//fin if 0 = plan datos   
                      
                      
                  
                  
                  }else if(jComboPerfilOpciones.getSelectedIndex() == 1){
                  
                           
                        switch(jComboPerfilFiltro.getSelectedIndex()){
                        
                        
                            case 0:{
                            
                             if(jCheckPerfilFecha.isSelected()){
                                
                                 System.out.println("graficar tipo_plan - plan voz -  todos - rango");
                                
                                }else{
                                
                                System.out.println("graficar tipo_plan - plan voz - sin fecha");
                                    
                                }
                            break;
                            }
                              
                                
                            case 1:{
                            
                                System.out.println("graficar tipo_plan - plan voz -  genero ");
                            
                            break;
                            }
                                
                            case 2:{
                                
                                System.out.println("graficar tipo_plan - plan voz -  estado civil ");
                            
                            break;
                            }
                                
                            case 3:{
                                
                                System.out.println("graficar tipo_plan - plan voz -  edad ");
                            
                            break;
                            }
                                
                            case 4:{
                                
                                System.out.println("graficar tipo_plan - plan voz -  estrato ");
                            
                            break;
                            }    
                        
                        
                        }
                    
                     
                     }//fin if 1 = plan voz 
                  
                  
                  break;
              
              
              
              }//fin case 1 = Tipo_plan
                  
              case 2:{
                  
                  
                  if(jComboPerfilOpciones.getSelectedIndex() == 0){
                  
                  
                   switch(jComboPerfilFiltro.getSelectedIndex()){
                        
                        
                            case 0:{
                            
                           if(jCheckPerfilFecha.isSelected()){
                                
                                 System.out.println("roaming - activado -  todos - rango");
                                
                                }else{
                                
                                System.out.println("roaming - activado - sin fecha");
                                    
                                }
                            break;
                            }
                              
                                
                            case 1:{
                            
                                System.out.println("roaming - activado -  genero ");
                            
                            break;
                            }
                                
                            case 2:{
                                
                                System.out.println("roaming - activado -  estado civil ");
                            
                            break;
                            }
                                
                            case 3:{
                                
                                System.out.println("roaming - activado -  edad ");
                            
                            break;
                            }
                                
                            case 4:{
                                
                                System.out.println("roaming - activado -  estrato ");
                            
                            break;
                            }    
   
                        }//fin if 0 = activado   
                      
                      
                  
                  
                  }else if(jComboPerfilOpciones.getSelectedIndex() == 1){
                  
                           
                        switch(jComboPerfilFiltro.getSelectedIndex()){
                        
                        
                            case 0:{
                            
                             if(jCheckPerfilFecha.isSelected()){
                                
                                 System.out.println("roaming - desactivado -  todos - rango");
                                
                                }else{
                                
                                System.out.println("roaming - desactivado - sin fecha");
                                    
                                }
                            break;
                            }
                              
                                
                            case 1:{
                            
                                System.out.println("roaming - desactivado -  genero ");
                            
                            break;
                            }
                                
                            case 2:{
                                
                                System.out.println("roaming - desactivado -  estado civil ");
                            
                            break;
                            }
                                
                            case 3:{
                                
                                System.out.println("roaming - desactivado -  edad ");
                            
                            break;
                            }
                                
                            case 4:{
                                
                                System.out.println("roaming - desactivado -  estrato ");
                            
                            break;
                            }    
                        
                        
                        }
                    
                     
                     }//fin if 1 = desactivado 
                  
                  
                  break;
              
              
              
              } //fin case 2 = Roaming   
          
              case 3:{
                  
                  if(jComboPerfilOpciones.getSelectedIndex() == 0){
                  
                  
                   switch(jComboPerfilFiltro.getSelectedIndex()){
                        
                        
                            case 0:{
                            
                             if(jCheckPerfilFecha.isSelected()){
                                
                                 System.out.println("graficar estado - activo-  todos - rango");
                                
                                }else{
                                
                                System.out.println("graficar estado - activo - sin fecha");
                                    
                                }
                            break;
                            }
                              
                                
                            case 1:{
                            
                                System.out.println("graficar estado - activo -  genero ");
                            
                            break;
                            }
                                
                            case 2:{
                                
                                System.out.println("graficar estado - activo -  estado civil ");
                            
                            break;
                            }
                                
                            case 3:{
                                
                                System.out.println("graficar estado - activo -  edad ");
                            
                            break;
                            }
                                
                            case 4:{
                                
                                System.out.println("graficar estado - activo -  estrato ");
                            
                            break;
                            }    
   
                        }  
                      
                      
                  
                      //fin if 0 =  activo
                  
                  
                  }else if(jComboPerfilOpciones.getSelectedIndex() == 1){
                  
                     if(jComboPerfilOpciones.getSelectedItem().equals("Retirado")){
                     
                        if(jChecPerfilCausa.isSelected()){
                        
                        
                            System.out.println("graficar estado - Retirado - Causa Retiro");
                            
                        
                        }else{
                        
                        
                        switch(jComboPerfilFiltro.getSelectedIndex()){
                        
                        
                            case 0:{
                            
                            if(jCheckPerfilFecha.isSelected()){
                                
                                 System.out.println("graficar estado - retirado -  todos - rango");
                                
                                }else{
                                
                                System.out.println("graficar estado - retirado - sin fecha");
                                    
                                }
                            break;
                            }
                              
                                
                            case 1:{
                            
                                System.out.println("graficar estado - retirado -  genero ");
                            
                            break;
                            }
                                
                            case 2:{
                                
                                System.out.println("graficar estado - retirado -  estado civil ");
                            
                            break;
                            }
                                
                            case 3:{
                                
                                System.out.println("graficar estado - retirado -  edad ");
                            
                            break;
                            }
                                
                            case 4:{
                                
                                System.out.println("graficar estado - retirado -  estrato ");
                            
                            break;
                            }    
                        
                        
                        
                        
                        
                        
                        } 
                            
                        
                        } // fin else filtro
                     
                     
                     
                     } 
                  
                  
                  }
              
              
                  break;
                  
              }// fin case 3 = estado
          
          
          
          
          
          
          }  
        
        
        /* ------------------------------------------------------------------------------------------------
         * -------------------------------------------------------------------------------------------------
         * Aqui  hay que pensar un poquito mas sobre los condicionales
         se debe implementar las consultas segun unos condicionales.....
         si se selecciono Criterio y Fecha no entonces-----> consulta x
         si se selecciono Criterio y Fecha si entonces ----> si se selecciono Filtro a ----> consulta y
         si se selecciono Criterio y Fecha si entonces ----> si se selecciono Filtro b ----> consulta z
         * si se selecciono Criterio y Fecha si entonces ----> si se selecciono Filtro c ----> consulta w
         -------------------------------------------------------------------------------------------------------
         * --------------------------------------------------------------------------------------------
         */
        
        
    }//GEN-LAST:event_jButtonPerfilResultadoActionPerformed

    private void jButtonPerfilResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPerfilResetActionPerformed

        jPContainer.setVisible(false);
        FechainicioPerfil.setEnabled(false);
        FechafinPerfil.setEnabled(false);
        jCheckPerfilFecha.setEnabled(false);
        jComboPerfilEstado.setEnabled(false);
        jComboPerfilEdad.setEnabled(false);
        jComboPerfilEstrato.setEnabled(false);
        jComboPerfilGenero.setEnabled(false);
        jComboPerfilFiltro.setEnabled(false);
        jChecPerfilCausa.setEnabled(false);
        jComboPerfilOpciones.setEnabled(false);
        jButtonPerfilResultado.setEnabled(false);
        
        
        
        
    }//GEN-LAST:event_jButtonPerfilResetActionPerformed

    private void jChecPerfilCausaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChecPerfilCausaActionPerformed
        
        
        if(jChecPerfilCausa.isSelected()){
           
        
        jComboPerfilFiltro.setEnabled(false);
            
        }else{
        
        jComboPerfilFiltro.setEnabled(true);
        jChecPerfilCausa.setEnabled(false);
        
        }
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jChecPerfilCausaActionPerformed

    private void jButtonPlanesResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlanesResetActionPerformed
        
        jCheckPlanesFecha.setEnabled(true);
        jComboPlanesFiltro.setEnabled(false);
        Fechainicioplan.setEnabled(false);
        Fechafinplan.setEnabled(false);
        jComboPlanesAno.setEnabled(false);
        jComboPlanesMes.setEnabled(false);
        jButtonPlanesResultado.setEnabled(true);
        jCheckPlanesFecha.setSelected(false);
        jComboGraficaPlan.setEnabled(false);
        
        
        
    }//GEN-LAST:event_jButtonPlanesResetActionPerformed

    private void jCheckLlamadasFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckLlamadasFechaActionPerformed

        if(jCheckLlamadasFecha.isSelected()){
           
        
        jComboLlamadaFiltro.setEnabled(true);
            
        }else{
        
        jComboLlamadaFiltro.setEnabled(false);
        jComboLlamadaAno.setEnabled(false);
        jComboLlamadaMes.setEnabled(false);
        jComboLlamadaDia.setEnabled(false);
        }
        
        
       
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckLlamadasFechaActionPerformed

    private void jButtonLlamadaResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLlamadaResetActionPerformed
        
        jButtonLlamadaResultado.setEnabled(true);
        jComboLlamadaAno.setEnabled(false);
        jComboLlamadaDia.setEnabled(false);
        jComboLlamadaMes.setEnabled(false);
        jComboLlamadaFiltro.setEnabled(false);
        jCheckLlamadasFecha.setEnabled(true);
       jCheckLlamadasFecha.setSelected(false);
       jComboGraficaLlamada.setEnabled(false);
        
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonLlamadaResetActionPerformed

    private void jComboPerfilCriterioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboPerfilCriterioActionPerformed

        jComboPerfilOpciones.setEnabled(true);
        jChecPerfilCausa.setEnabled(false);
        jComboPerfilFiltro.setEnabled(false);
        
        switch(jComboPerfilCriterio.getSelectedIndex()){
            
            
        
            case 0:{
                jComboPerfilOpciones.removeAllItems();
                jComboPerfilOpciones.addItem("Prepago");
                jComboPerfilOpciones.addItem("Postpago");
                jComboPerfilOpciones.setSelectedIndex(0);
                break;
            }
            case 1:{
                jComboPerfilOpciones.removeAllItems();
                jComboPerfilOpciones.addItem("Plan Datos");
                jComboPerfilOpciones.addItem("Plan Voz");
                jComboPerfilOpciones.setSelectedIndex(0);
                
                break;
            
            }    
            case 2:{
                jComboPerfilOpciones.removeAllItems();
                jComboPerfilOpciones.addItem("Activado");
                jComboPerfilOpciones.addItem("Desactivado");
                jComboPerfilOpciones.setSelectedIndex(0);
                break;
            }    
            case 3:{
                jComboPerfilOpciones.removeAllItems();
                jComboPerfilOpciones.addItem("Activo");
                jComboPerfilOpciones.addItem("Retirado");
                jComboPerfilOpciones.setSelectedIndex(0);
                break;
            }    
               
        }
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboPerfilCriterioActionPerformed

    private void jComboPerfilOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboPerfilOpcionesActionPerformed
        
        jComboPerfilFiltro.setEnabled(true);
        
        switch(jComboPerfilOpciones.getSelectedIndex()){
        
            case 0:{
            
            jComboPerfilFiltro.setEnabled(true);   
            
            break;
            }
            case 1:{
            
            if(jComboPerfilOpciones.getSelectedItem().equals("Retirado")){
            
                jChecPerfilCausa.setEnabled(true);
            
            }else{
            
            jComboPerfilFiltro.setEnabled(true);
            
            }   
            
            break;
            }
        
        
        
        
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboPerfilOpcionesActionPerformed

    private void jComboPerfilFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboPerfilFiltroActionPerformed

        switch(jComboPerfilFiltro.getSelectedIndex()){
        
            case 0:{
            
            jComboPerfilGenero.setEnabled(true);
            jComboPerfilEstado.setEnabled(true);  
            jComboPerfilEstrato.setEnabled(true);  
            jComboPerfilEdad.setEnabled(true);
            jCheckPerfilFecha.setEnabled(true);
            jButtonPerfilResultado.setEnabled(true);
            
            break;
            }
            default:{
            
            jComboPerfilEstado.setEnabled(false);
            jComboPerfilEdad.setEnabled(false);
            jComboPerfilEstrato.setEnabled(false);
            jComboPerfilGenero.setEnabled(false);
            jCheckPerfilFecha.setEnabled(true);
            jButtonPerfilResultado.setEnabled(true);
            
            
            
            break;
            }
        
        
        
        
        }
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboPerfilFiltroActionPerformed

    private void jCheckPerfilFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckPerfilFechaActionPerformed

        if(jCheckPerfilFecha.isSelected()){
           
        FechainicioPerfil.setEnabled(true);
        FechafinPerfil.setEnabled(true);
            
        }else{
        
        FechainicioPerfil.setEnabled(false);
        FechafinPerfil.setEnabled(false);
        
        }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckPerfilFechaActionPerformed

    private void jComboPlanesCriterioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboPlanesCriterioActionPerformed

       
        if(jComboPlanesCriterio.getSelectedIndex()==0){
        jComboGraficaPlan.setEnabled(true);}else{
        jComboGraficaPlan.setEnabled(false);
        jComboGraficaPlan.setSelectedIndex(1);
        
        }
        
        
        
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboPlanesCriterioActionPerformed

    private void jCheckPlanesFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckPlanesFechaActionPerformed

        if(jCheckPlanesFecha.isSelected()){
           
        
        jComboPlanesFiltro.setEnabled(true);
            
        }else{
        
        jComboPlanesFiltro.setEnabled(false);
        jComboPlanesAno.setEnabled(false);
        jComboPlanesMes.setEnabled(false);
        }
        
        
       
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckPlanesFechaActionPerformed

    private void jComboPlanesFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboPlanesFiltroActionPerformed

        
        switch(jComboPlanesFiltro.getSelectedIndex()){
        
            case 0:{
            
            Fechainicioplan.setEnabled(true);
            Fechafinplan.setEnabled(true);
            jComboPlanesAno.setEnabled(false);
            jComboPlanesMes.setEnabled(false);
            
            
            break;
            }
            case 1:{
            
            Fechainicioplan.setEnabled(false);
            Fechafinplan.setEnabled(false);
            jComboPlanesAno.setEnabled(true);
            jComboPlanesMes.setEnabled(false);
            
            
            
            break;
            }
            case 2:{
            
            Fechainicioplan.setEnabled(false);
            Fechafinplan.setEnabled(false);
            jComboPlanesAno.setEnabled(true);
            jComboPlanesMes.setEnabled(true);
            
            
            
            break;
            }    
        
        
        
        
        }
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboPlanesFiltroActionPerformed

    private void jComboLlamadaFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboLlamadaFiltroActionPerformed

        switch(jComboLlamadaFiltro.getSelectedIndex()){
        
            case 0:{
           
            jComboLlamadaAno.setEnabled(true);
            jComboLlamadaMes.setEnabled(false);
            jComboLlamadaDia.setEnabled(false);
            
            
            
            break;
            }
            case 1:{
            
            jComboLlamadaAno.setEnabled(true);
            jComboLlamadaMes.setEnabled(true);
            jComboLlamadaDia.setEnabled(false);
            
            
            
            break;
            }
            case 2:{
            
            jComboLlamadaAno.setEnabled(true);
            jComboLlamadaMes.setEnabled(true);
            jComboLlamadaDia.setEnabled(true);
            
            
            
            break;
            }    
        
        
        
        
        }
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboLlamadaFiltroActionPerformed

    private void jButtonPlanesResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlanesResultadoActionPerformed

        switch(jComboPlanesCriterio.getSelectedIndex()){
        
            case 0:{
                
                /*inicio Condicionales de consulta para tipo plan*/
                if(jCheckPlanesFecha.isSelected()){
                    
                switch(jComboPlanesFiltro.getSelectedIndex()){
                
                    case 0:{
                    
                    System.out.println("Graficar por Tipo plan - Fecha - Rango ");
                    if(obtenerFecha(Fechainicioplan).equals("error") || obtenerFecha(Fechafinplan).equals("error")){
                        
                            jTextAreaResultados.setText("ERROR,\n VERIFIQUE SI EL RANGO ESTA DENTRO DE LOS PARAMETROS PERMITIDOS");
                        
                    }else{
                    String query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan = 'Prepago' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan = 'Postpago' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    System.out.println(query);
                    System.out.println(query2);
                    
                    FunctionGraphTwoSeries(query, query2, jComboGraficaPlan, "Prepago", "Postpago" );
                    }
                    break;
                    
                    }
                        
                    case 1:{
                    
                        System.out.println("Graficar por Tipo plan - Fecha - Año "+jComboPlanesAno.getSelectedItem());
                        if(jComboPlanesAno.getSelectedItem().equals("Todos")){
                        String query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan = 'Prepago'";
                        String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan = 'Postpago'";
                        
                        FunctionGraphTwoSeries(query, query2, jComboGraficaPlan, "Prepago", "Postpago" );
                        
                        }else{
                      
                        String query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan = 'Prepago'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                        String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan = 'Postpago'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       
                       
                        FunctionGraphTwoSeries(query, query2, jComboGraficaPlan, "Prepago", "Postpago"  );
                        
                        }
                        
                        
                        
                    break;
                    
                    }    
                
                    case 2:{
                        
                        System.out.println("Graficar por Tipo plan - Fecha - Año y Mes "+jComboPlanesAno.getSelectedItem()+"-"+jComboPlanesMes.getSelectedItem());
                        
                        if(jComboPlanesAno.getSelectedItem().equals("Todos")){
                        String query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan =  'Prepago' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan =  'Postpago' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                    
                        FunctionGraphTwoSeries(query, query2, jComboGraficaPlan, "Prepago", "Postpago"  );
                        
                        }else{
                         String query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan =  'Prepago' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan =  'Postpago' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                    
                    FunctionGraphTwoSeries(query, query2, jComboGraficaPlan, "Prepago", "Postpago"  );
                        
                }     
                    
                    break;
                    
                    }        
                 
                }    
                
                
                    
                }else{
                    
                System.out.println("Graficar por Tipo plan");
                
                String query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan = 'Prepago'";
                String query2 = "SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan = 'Postpago'";
        
                FunctionGraphTwoSeries(query, query2, jComboGraficaPlan, "Prepago", "Postpago"  );
                
                
                
                }
            
            break;
            
            /*fin Condicionales de consulta para tipo plan*/
            
            }
                
            case 1:{
            
             /*inicio Condicionales de consulta para Planes Voz*/
                if(jCheckPlanesFecha.isSelected()){
                    
                switch(jComboPlanesFiltro.getSelectedIndex()){
                
                    case 0:{
                    
                    System.out.println("Graficar por Planes Voz - Fecha - Rango ");
                    if(obtenerFecha(Fechainicioplan).equals("error") || obtenerFecha(Fechafinplan).equals("error")){
                        
                            jTextAreaResultados.setText("ERROR,\n VERIFIQUE SI EL RANGO ESTA DENTRO DE LOS PARAMETROS PERMITIDOS");
                        
                    }else{
                    String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 1600' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar Abierto' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query4="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query5="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 600 Abierto' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query6="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 1600 Abierto' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query7="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Casual Abierto' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query8="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Casual' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query9="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium Abierto' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query10="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold Abierto' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query11="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query12="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Familia' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query13="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Familia Abierto' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query14="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 600' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    functionGraphFourteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, jComboGraficaPlan);
               
                    }
                    
                    
                    break;
                    
                    }
                        
                    case 1:{
                    
                        System.out.println("Graficar por Planes Voz - Fecha - Año ");
                        if(jComboPlanesAno.getSelectedItem().equals("Todos")){
                        String query1 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 1600'";
                        String query2 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold'";
                        String query3 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar Abierto'";
                        String query4 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar'";
                        String query5 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 600 Abierto'";
                        String query6 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 1600 Abierto'";
                        String query7 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Casual Abierto'";
                        String query8 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Casual'";
                        String query9 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium Abierto'";
                        String query10 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold Abierto'";
                        String query11 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium'";
                        String query12 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Familia'";
                        String query13 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Familia Abierto'";
                        String query14 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 600'";
                functionGraphFourteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, jComboGraficaPlan);
                
                        }else{
                      
                        String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 1600'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                        String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar Abierto'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query4="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query5="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 600 Abierto'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query6="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 1600 Abierto'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query7="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Casual'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query8="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium Abierto'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query9="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold Abierto'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query10="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query11="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Familia'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query12="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Familia Abierto'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query13="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 600'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query14="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Casual Abierto'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       
                        
                        functionGraphFourteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, jComboGraficaPlan);
                
                        
                        }
                    
                    break;
                    
                    }    
                
                    case 2:{
                        
                        System.out.println("Graficar por Planes Voz - Fecha - Año y Mes ");
                        if(jComboPlanesAno.getSelectedItem().equals("Todos")){
                        String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz = 'Total 1600' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Estandar' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz=  'Casual Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query4="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Gold Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query5="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Familia Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query6="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Gold' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query7="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Total 600 Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query8="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Casual' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query9="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Premium' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query10="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Total 600' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query11="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Estandar Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query12="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Total 1600 Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query13="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Premium Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query14="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Familia' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
  
                         
                        functionGraphFourteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, jComboGraficaPlan);
                
                        }else{
                         String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Total 1600' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Estandar' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Casual Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query4="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Gold Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query5="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Familia Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query6="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Gold' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query7="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Total 600 Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query8="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Casual' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query9="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Premium' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query10="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Total 600' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query11="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Estandar Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query12="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Total 1600 Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query13="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Premium Abierto' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query14="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz =  'Familia' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                        
                     
                     functionGraphFourteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, jComboGraficaPlan);
                   
                } 
                    
                    
                    break;
                    
                    }        
                
                }    
                
                
                    
                }else{
                    
                System.out.println("Graficar por Planes Voz");
                System.out.println("Consumo de Planes Voz");
                String query1 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 1600'";
                String query2 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold'";
                String query3 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar Abierto'";
                String query4 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar'";
                String query5 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 600 Abierto'";
                String query6 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 1600 Abierto'";
                String query7 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Casual Abierto'";
                String query8 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Casual'";
                String query9 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium Abierto'";
                String query10 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold Abierto'";
                String query11 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium'";
                String query12 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Familia'";
                String query13 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Familia Abierto'";
                String query14 = "select count(c.key_cliente) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Total 600'";
                functionGraphFourteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, jComboGraficaPlan);
                
                }
            
            break;
            
            /*fin Condicionales de consulta para Planes Voz"*/
            
            
            }
                
            case 2:{
            
             /*inicio Condicionales de consulta para Planes_datos*/
                if(jCheckPlanesFecha.isSelected()){
                    
                switch(jComboPlanesFiltro.getSelectedIndex()){
                
                    case 0:{
                    
                    System.out.println("Graficar por Planes_datos - Fecha - Rango "); 
                    
                    if(obtenerFecha(Fechainicioplan).equals("error") || obtenerFecha(Fechafinplan).equals("error")){
                        
                            jTextAreaResultados.setText("ERROR,\n VERIFIQUE SI EL RANGO ESTA DENTRO DE LOS PARAMETROS PERMITIDOS");
                        
                    }else{
                    String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Sin plan de datos' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 100 Megas' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 1Gb' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query4="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 50 Megas' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query5="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Premium por kilobyte' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query6="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan Ilimitado' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query7="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 5 Megas' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query8="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Estandar por kilobyte' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query9="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Gold por kilobyte' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    functionGraphNineSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, jComboGraficaPlan);
                
                    }
                    
                    break;
                    
                    }
                        
                    case 1:{
                    
                        System.out.println("Graficar por Planes_datos - Fecha - Año ");
                        
                        if(jComboPlanesAno.getSelectedItem().equals("Todos")){
                        String query1 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Sin plan de datos'";
                        String query2 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 100 Megas'";
                        String query3 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 1Gb'";
                        String query4 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 50 Megas'";
                        String query5 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Premium por kilobyte'";
                        String query6 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan Ilimitado'";
                        String query7 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 5 Megas'";
                        String query8 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Estandar por kilobyte'";
                        String query9 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Gold por kilobyte'";
                        functionGraphNineSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, jComboGraficaPlan);
                
                        }else{
                      
                        String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Sin plan de datos'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                        String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 100 Megas'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 1Gb'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query4="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 50 Megas'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query5="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Premium por kilobyte'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query6="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan Ilimitado'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query7="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 5 Megas'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query8="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Estandar por kilobyte'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query9="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Gold por kilobyte'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       
                       functionGraphNineSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, jComboGraficaPlan);
                
                        
                        }
                        
                    
                    break;
                    
                    }    
                
                    case 2:{
                        
                        System.out.println("Graficar por Planes_datos - Fecha - Año y Mes ");
                        
                        
                        if(jComboPlanesAno.getSelectedItem().equals("Todos")){
                        String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Sin plan de datos' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Plan 50 Megas' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Plan 5 Megas' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query4="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Plan 100 Megas' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query5="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Premium por kilobyte' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query6="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Estandar por Kilobyte' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query7="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Plan 1 Gb' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query8="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Plan Ilimitado' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query9="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Gold por kilobyte' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         
                         
                        functionGraphNineSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, jComboGraficaPlan);
                
                        }else{
                         String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Sin plan de datos' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Plan 50 Megas' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Plan 5 Megas' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query4="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Plan 100 Megas' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query5="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Premium por kilobyte' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query6="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Estandar por Kilobyte' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query7="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Plan 1 Gb' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query8="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Plan Ilimitado' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query9="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_datos = 'Gold por kilobyte' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         
                     
                     functionGraphNineSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, jComboGraficaPlan);
                
                }
                    
                    
                    break;
                    
                    }        
                
                }    
                
                
                    
                }else{
                    
                System.out.println("Graficar por Planes_datos");
                String query1 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Sin plan de datos'";
                String query2 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 100 Megas'";
                String query3 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 1Gb'";
                String query4 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 50 Megas'";
                String query5 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Premium por kilobyte'";
                String query6 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan Ilimitado'";
                String query7 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Plan 5 Megas'";
                String query8 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Estandar por kilobyte'";
                String query9 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_datos = 'Gold por kilobyte'";
                functionGraphNineSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, jComboGraficaPlan);
                
                
                
                
                
                }
            
            break;
            
            /*fin Condicionales de consulta para Planes_datos*/
            
            }
                
            case 3:{
            
             /*inicio Condicionales de consulta para plan_coorporativos*/
                if(jCheckPlanesFecha.isSelected()){
                    
                switch(jComboPlanesFiltro.getSelectedIndex()){
                
                    case 0:{
                    
                    System.out.println("Graficar por plan_coorporativos - Fecha - Rango "); 
                    
                     if(obtenerFecha(Fechainicioplan).equals("error") || obtenerFecha(Fechafinplan).equals("error")){
                        
                            jTextAreaResultados.setText("ERROR,\n VERIFIQUE SI EL RANGO ESTA DENTRO DE LOS PARAMETROS PERMITIDOS");
                        
                    }else{
                    String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium Corporativo' and p.flag_corporativo = '1' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar Corporativo' and p.flag_corporativo = '1' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold Corporativo' and p.flag_corporativo = '1' where c.key_fecha between'"+obtenerFecha(Fechainicioplan)+"' and '"+obtenerFecha(Fechafinplan)+"'";
                    functionGraphthreeSeries(query1, query2, query3,jComboGraficaPlan);
                    }
                    
                    break;
                    
                    }
                        
                    case 1:{
                    
                        System.out.println("Graficar por plan_coorporativos - Fecha - Año "); 
                        
                        if(jComboPlanesAno.getSelectedItem().equals("Todos")){
                        String query1 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium Corporativo' and p.flag_corporativo = '1'";
                        String query2 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar Corporativo' and p.flag_corporativo = '1'";
                        String query3 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold Corporativo' and p.flag_corporativo = '1'";
                        functionGraphthreeSeries(query1, query2, query3,jComboGraficaPlan);
                
                        }else{
                      
                        String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium Corporativo' and p.flag_corporativo = '1'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                        String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar Corporativo' and p.flag_corporativo = '1'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold Corporativo' and p.flag_corporativo = '1'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on c.key_fecha = f.key_fecha and f.ano = '"+jComboPlanesAno.getSelectedItem()+"'";
                       
                       functionGraphthreeSeries(query1, query2, query3,jComboGraficaPlan);
                
                        
                        }
                        
                    
                    break;
                    
                    }    
                
                    case 2:{
                        
                        System.out.println("Graficar por plan_coorporativos - Fecha - Año y Mes "); 
                    
                         if(jComboPlanesAno.getSelectedItem().equals("Todos")){
                        String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz = 'Premium Corporativo' and p.flag_corporativo = '1' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz = 'Estandar Corporativo' and p.flag_corporativo = '1' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz = 'Gold Corporativo' and p.flag_corporativo = '1' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
               
                        functionGraphthreeSeries(query1, query2, query3,jComboGraficaPlan);
                        
                        }else{
                         String query1="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz = 'Premium Corporativo' and p.flag_corporativo = '1' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query2="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz = 'Estandar Corporativo' and p.flag_corporativo = '1' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                         String query3="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p ON c.key_plan = p.key_plan\n" +
"AND p.tipo_plan_voz = 'Gold Corporativo' and p.flag_corporativo = '1' INNER JOIN bodegacolmovil.dimension_fecha f ON c.key_fecha = f.key_fecha AND f.ano =  '"+jComboPlanesAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboPlanesMes.getSelectedItem()+"'";
                    
                     
                     functionGraphthreeSeries(query1, query2, query3,jComboGraficaPlan);
                }
                    
                    break;
                    
                    }        
                
                }    
                
                
                    
                }else{
                    
                System.out.println("Graficar por plan_coorporativos");
                String query1 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Premium Corporativo' and p.flag_corporativo = '1'";
                String query2 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Estandar Corporativo' and p.flag_corporativo = '1'";
                String query3 = "select count(*) from hecho_contrato c INNER JOIN bodegacolmovil.dimension_plan p on c.key_plan = p.key_plan and p.tipo_plan_voz = 'Gold Corporativo' and p.flag_corporativo = '1'";
                functionGraphthreeSeries(query1, query2, query3,jComboGraficaPlan);
                }
            
            break;
            
            /*fin Condicionales de consulta para plan_coorporativos*/
            
            
            }
            
        
        }
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPlanesResultadoActionPerformed

    private void jButtonLlamadaResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLlamadaResultadoActionPerformed

        
        switch(jComboLlamadasCriterio.getSelectedIndex()){
        
            case 0:{
                
                /*inicio Condicionales de consulta para Operador*/
                if(jCheckLlamadasFecha.isSelected()){
                    
                switch(jComboLlamadaFiltro.getSelectedIndex()){
                
                    case 0:{
                    
                    System.out.println("Graficar por Tipo Operador - Fecha - Año ");  
                    
                    if(jComboLlamadaAno.getSelectedItem().equals("Todos")){
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telefonica'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='UNE'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telmex'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EMCALI'";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETB'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EPM'";
                String query7 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Comcel'";
                String query8 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Movistar'";
                String query9 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Tigo'";
                String query10 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETP'";
                String query11 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Emtelsa'";
                String query12 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Avantel'";
                String query13 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Metrotel'";
                String query14 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Telebucaramanga'";
                String query15 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Vodafone'";
                String query16 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Orange'";
                String query17 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='AT&T'";
                String query18 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Colmovil'";
                functionGraphEighteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, query15, query16, query17, query18, jComboGraficaLlamada);
                
                        
                        }else{
                      
                        String query1="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telefonica'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                        String query2="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='UNE'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query3="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telmex'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query4="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EMCALI'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query5="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETB'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query6="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EPM'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query7="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Comcel'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query8="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Movistar'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query9="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Tigo'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query10="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETP'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query11="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Emtelsa'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query12="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Avantel'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query13="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Metrotel'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query14="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Telebucaramanga'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query15="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Vodafone'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query16="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Orange'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query17="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='AT&T'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       String query18="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Colmovil'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                       
                       
                        functionGraphEighteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, query15, query16, query17, query18, jComboGraficaLlamada);
                
                        }
                    
                    break;
                    
                    }
                        
                    case 1:{
                    
                        System.out.println("Graficar por Operador - Fecha - Año y Mes ");
                        if(jComboLlamadaAno.getSelectedItem().equals("Todos")){
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telefonica' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='UNE' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telmex' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EMCALI' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETB' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EPM' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query7 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Comcel' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query8 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Movistar' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query9 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Tigo' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query10 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETP' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query11 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Emtelsa' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query12 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Avantel' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query13 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Metrotel' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query14 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Telebucaramanga' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query15 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Vodafone' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query16 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Orange' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query17 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='AT&T' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query18 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Colmovil' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                functionGraphEighteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, query15, query16, query17, query18, jComboGraficaLlamada);
                
                        
                        }else{
                      
                        String query1="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telefonica'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                        String query2="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='UNE'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query3="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telmex'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query4="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EMCALI'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query5="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETB'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query6="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EPM'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query7="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Comcel'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query8="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Movistar'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query9="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Tigo'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query10="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETP'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query11="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Emtelsa'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query12="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Avantel'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query13="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Metrotel'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query14="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Telebucaramanga'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query15="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Vodafone'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query16="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Orange'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query17="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='AT&T'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       String query18="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Colmovil'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                       
                       
                        functionGraphEighteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, query15, query16, query17, query18, jComboGraficaLlamada);
                
                        }
                    
                    break;
                    
                    }    
                
                    case 2:{
                        
                        System.out.println("Graficar por Operador - Fecha - Año, Mes y dia ");
                        if(jComboLlamadaAno.getSelectedItem().equals("Todos")){
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telefonica' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='UNE' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telmex' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EMCALI' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETB' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EPM' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query7 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Comcel' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query8 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Movistar' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query9 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Tigo' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query10 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETP' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query11 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Emtelsa' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query12 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Avantel' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query13 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Metrotel' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query14 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Telebucaramanga' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query15 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Vodafone' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query16 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Orange' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query17 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='AT&T' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query18 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Colmovil' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                functionGraphEighteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, query15, query16, query17, query18, jComboGraficaLlamada);
                
                        
                        }else{
                      
                        String query1="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telefonica'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                        String query2="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='UNE'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query3="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telmex'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query4="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EMCALI'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query5="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETB'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query6="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EPM'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query7="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Comcel'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query8="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Movistar'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query9="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Tigo'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query10="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETP'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query11="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Emtelsa'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query12="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Avantel'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query13="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Metrotel'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query14="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Telebucaramanga'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query15="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Vodafone'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query16="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Orange'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query17="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='AT&T'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       String query18="SELECT count(*) FROM hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Colmovil'\n" +
"INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                       
                       
                        functionGraphEighteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, query15, query16, query17, query18, jComboGraficaLlamada);
                
                        }
                    
                    
                    break;
                    
                    }        
                
                }    
                
                
                    
                }else{
                    
                System.out.println("Graficar por Operador");
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telefonica'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='UNE'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='telmex'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EMCALI'";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETB'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='EPM'";
                String query7 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Comcel'";
                String query8 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Movistar'";
                String query9 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Tigo'";
                String query10 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='ETP'";
                String query11 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Emtelsa'";
                String query12 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Avantel'";
                String query13 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Metrotel'";
                String query14 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Telebucaramanga'";
                String query15 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Vodafone'";
                String query16 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Orange'";
                String query17 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='AT&T'";
                String query18 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_operador o on o.key_operador = h.key_operador and o.nombre_operador='Colmovil'";
                functionGraphEighteenSeries(query1, query2, query3, query4, query5, query6, query7, query8, query9, query10, query11, query12, query13, query14, query15, query16, query17, query18, jComboGraficaLlamada);
                
                }
            
            break;
            
            /*fin Condicionales de consulta para Operador*/
            
            }
                
            case 1:{
            
             /*inicio Condicionales de consulta para Franja*/
                if(jCheckLlamadasFecha.isSelected()){
                    
                switch(jComboLlamadaFiltro.getSelectedIndex()){
                
                    case 0:{
                    
                    System.out.println("Graficar por Franja - Fecha - Año ");
                    
                    if(jComboLlamadaAno.getSelectedItem().equals("Todos")){
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Madrugada'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Mañana'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Media Mañana'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Medio dia'";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Tarde'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Noche'";
                functionGraphSixSeries(query1,query2,query3,query4,query5,query6,jComboGraficaLlamada);
                        
                        }else{
                      
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Madrugada' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Mañana' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Media Mañana' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Medio dia' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Tarde' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Noche' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"'";
                functionGraphSixSeries(query1,query2,query3,query4,query5,query6,jComboGraficaLlamada);
                       
                       
                       
                        }
                    
                    
                    
                    break;
                    
                    }
                        
                    case 1:{
                    
                        System.out.println("Graficar por Franja - Fecha - Año y Mes "); 
                        if(jComboLlamadaAno.getSelectedItem().equals("Todos")){
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Madrugada' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Mañana' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Media Mañana' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Medio dia' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Tarde' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Noche' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                functionGraphSixSeries(query1,query2,query3,query4,query5,query6,jComboGraficaLlamada);
                        
                        }else{
                      
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Madrugada' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Mañana' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Media Mañana' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Medio dia' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' ";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Tarde' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Noche' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"'";
                functionGraphSixSeries(query1,query2,query3,query4,query5,query6,jComboGraficaLlamada);
                       
                       
                       
                        }
                    
                    break;
                    
                    }    
                
                    case 2:{
                        
                        System.out.println("Graficar por Franja - Fecha - Año , Mes y Dia ");
                         if(jComboLlamadaAno.getSelectedItem().equals("Todos")){
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Madrugada' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Mañana' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Media Mañana' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Medio dia' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Tarde' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Noche' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaDia.getSelectedItem()+"'";
                functionGraphSixSeries(query1,query2,query3,query4,query5,query6,jComboGraficaLlamada);
                        
                        }else{
                      
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Madrugada' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_dia_semana = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Mañana' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_dia_semana = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Media Mañana' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_dia_semana = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Medio dia' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_dia_semana = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Tarde' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_dia_semana = '"+jComboLlamadaDia.getSelectedItem()+"'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Noche' INNER JOIN bodegacolmovil.dimension_fecha f on h.key_fecha = f.key_fecha and f.ano = '"+jComboLlamadaAno.getSelectedItem()+"' and f.nombre_mes = '"+jComboLlamadaMes.getSelectedItem()+"' and f.nombre_dia_semana = '"+jComboLlamadaDia.getSelectedItem()+"'";
                functionGraphSixSeries(query1,query2,query3,query4,query5,query6,jComboGraficaLlamada);
                       
                       
                       
                        }
                        
                    
                    
                    break;
                    
                    }        
                
                }    
                
                
                    
                }else{
                    
                System.out.println("Graficar por Franja");
                String query1 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Madrugada'";
                String query2 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Mañana'";
                String query3 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Media Mañana'";
                String query4 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Medio dia'";
                String query5 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Tarde'";
                String query6 = "select count(*) from hecho_servicio_voz h INNER JOIN dimension_tiempo t on t.key_tiempo = h.key_tiempo and t.franja='Noche'";
                functionGraphSixSeries(query1,query2,query3,query4,query5,query6,jComboGraficaLlamada);
                
                }
            
            break;
            
            /*fin Condicionales de consulta paraF ranja"*/
            
            
            }
                
            
        
        }
        
        
        
        
        
        
        /*-----------------------------------------------------------------------------------------------------
         * ------------------------------------------------------------------------------------------------------
          Aqui se debe implementar las consultas segun unos condicionales.....
         si se selecciono Criterio y Fecha no entonces-----> consulta x
         si se selecciono Criterio y Fecha si entonces ----> si se selecciono Filtro a ----> consulta y
         si se selecciono Criterio y Fecha si entonces ----> si se selecciono Filtro b ----> consulta z
         * si se selecciono Criterio y Fecha si entonces ----> si se selecciono Filtro c ----> consulta w
         -----------------------------------------------------------------------------------------------------------
         * ---------------------------------------------------------------------------------------------------
         */
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonLlamadaResultadoActionPerformed

    private void jComboLlamadasCriterioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboLlamadasCriterioActionPerformed
   
        jComboGraficaLlamada.setEnabled(true);
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboLlamadasCriterioActionPerformed

    private void jComboPlanesAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboPlanesAnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboPlanesAnoActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed

        String edad[] = new String[2];
                                
        edad = obtenerEdad(jComboPerfilEdad.getSelectedItem().toString());
                                
        
        
        if(jComboNumPerfil.getSelectedIndex() == 0){
                                
                                    query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN "+criterio+" AND "+opcion+" INNER JOIN bodegacolmovil.dimension_cliente cl ON c.key_demografia = cl.key_cliente and cl.genero = '"+jComboPerfilGenero.getSelectedItem()+"' INNER JOIN bodegacolmovil.dimension_demografia d ON c.key_demografia = d.key_dimension_demografia and d.estrato = '"+jComboPerfilEstrato.getSelectedItem()+"' and d.estado_civil = '"+jComboPerfilEstado.getSelectedItem()+"\r' where d.edad between '"+edad[0]+"' and '"+edad[1]+"'";
                                
                                    mensaje="Perfil: "+jComboPerfilGenero.getSelectedItem()+"-"+jComboPerfilEstrato.getSelectedItem()+"-"+jComboPerfilEstado.getSelectedItem()+"-"+jComboPerfilEdad.getSelectedItem();
                                    
                                    
                                }else if(jComboNumPerfil.getSelectedIndex() == 1){
                                
                                   query="SELECT count(*) FROM bodegacolmovil.hecho_contrato c INNER JOIN "+criterio+" AND "+opcion+" INNER JOIN bodegacolmovil.dimension_cliente cl ON c.key_demografia = cl.key_cliente and cl.genero = '"+jComboPerfilGenero.getSelectedItem()+"' INNER JOIN bodegacolmovil.dimension_demografia d ON c.key_demografia = d.key_dimension_demografia and d.estrato = '"+jComboPerfilEstrato.getSelectedItem()+"' and d.estado_civil = '"+jComboPerfilEstado.getSelectedItem()+"\r' where d.edad between '"+edad[0]+"' and '"+edad[1]+"'";
                                 mensaje2="Perfil: "+jComboPerfilGenero.getSelectedItem()+"-"+jComboPerfilEstrato.getSelectedItem()+"-"+jComboPerfilEstado.getSelectedItem()+"-"+jComboPerfilEdad.getSelectedItem();
                                    
                                
                                }
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    
    
    private void functionGraphFiveSeries(String query, String query2, String query3, String query4, String query5, String mensaje1, String mensaje2 , String mensaje3, String mensaje4, String mensaje5, String mensajegeral){
	
	int[] valores; 
        String[][] vlr1 = null;
        String[][] vlr2 = null;
        String[][] vlr3 = null;
        String[][] vlr4 = null;
        String[][] vlr5 = null;
        String[] ids = null;
        String[] nombreSerie = null;
        int[] valorSerie = null;
        
        try
        {
            gestorBD obj = new gestorBD();
            vlr1 =  obj.generarConsulta(query);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj2 = new gestorBD();
            vlr2 = obj2.generarConsulta(query2);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj3 = new gestorBD();
            vlr3 = obj3.generarConsulta(query3);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj4 = new gestorBD();
            vlr4 = obj4.generarConsulta(query4);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj5 = new gestorBD();
            vlr5 = obj5.generarConsulta(query5);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        /*
        try
        {
            gestorBD obj6 = new gestorBD();
            vlr6 = obj6.generarConsulta(query6);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
		*/
        
        int k=0;
        //aqui toca dfinir el tamaño del arreglo de acuerdo a la cantidad de parametros de busqueda sino crear una clase graficadora
        valores = new int[5];
        while(k < valores.length){
            for(int i=0; i < vlr1.length; i++){
                for(int j= 0; j < vlr1.length; j++){
                    String vlr = vlr1[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            
            k++;
            
            for(int i=0; i < vlr2.length; i++){
                for(int j= 0; j < vlr2.length; j++){
                    String vlr = vlr2[i][j];
                    valores[k] = Integer.parseInt(vlr);                  
                }
            }
            k++;
            
            for(int i=0; i < vlr3.length; i++){
                for(int j= 0; j < vlr3.length; j++){
                    String vlr = vlr3[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            k++;
            
            for(int i=0; i < vlr4.length; i++){
                for(int j= 0; j < vlr4.length; j++){
                    String vlr = vlr4[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            k++;
            
            for(int i=0; i < vlr5.length; i++){
                for(int j= 0; j < vlr5.length; j++){
                    String vlr = vlr5[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            k++;
            /*
            for(int i=0; i < vlr6.length; i++){
                for(int j= 0; j < vlr5.length; j++){
                    String vlr = vlr5[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            k++;
			*/
        }
        String[] nombreParametros = {mensaje1,mensaje2,mensaje3,mensaje4,mensaje5}; 
        controladorDatos objD = new controladorDatos();  
        nombreSerie = objD.getNombreSerie(nombreParametros);
        valorSerie = objD.getDataSerie(valores);
        
        if(tipografica.getSelectedIndex() == 0){  
            String titulo = mensajegeral; 
            graph = new graficoBarras(titulo, nombreSerie, valorSerie);
            graph.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(graph);  
        }
        if(tipografica.getSelectedIndex() == 1){
            String titulo2 = mensajegeral;
            ids = objD.getIdentificadoresTorta(titulo2);
            pie = new graficoTorta(nombreSerie, valorSerie, ids);
            pie.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(pie);    
        }
        
        StringBuilder rts = new StringBuilder();
        rts.append(mensaje1+": "+valorSerie[0]+"\n"+mensaje2+": "+valorSerie[1]+"\n"mensaje3+": "+valorSerie[2]+"\n"mensaje4+": "+valorSerie[3]+"\n"mensaje5+": "+valorSerie[4]);
        
        jTextAreaResultados.setText(rts.toString());
	
	
	
	
	}
    
    private void functionGraphNineSeries(String query, String query2, String query3, String query4,String query5, String query6, String query7, String query8, String query9, JComboBox tipografica){
        int[] valores; 
        String[][] vlr1 = null;
        String[][] vlr2 = null;
        String[][] vlr3 = null;
        String[][] vlr4 = null;
        String[][] vlr5 = null;
        String[][] vlr6 = null;
        String[][] vlr7 = null;
        String[][] vlr8 = null;
        String[][] vlr9 = null;
        String[] nombreSerie = null;
        int[] valorSerie = null;
        String[] ids = null;
        
        try
        {
            gestorBD obj = new gestorBD();
            vlr1 =  obj.generarConsulta(query);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj2 = new gestorBD();
            vlr2 = obj2.generarConsulta(query2);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj3 = new gestorBD();
            vlr3 = obj3.generarConsulta(query3);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj4 = new gestorBD();
            vlr4 =  obj4.generarConsulta(query4);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj5 = new gestorBD();
            vlr5 = obj5.generarConsulta(query5);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj6 = new gestorBD();
            vlr6 = obj6.generarConsulta(query6);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj7 = new gestorBD();
            vlr7 =  obj7.generarConsulta(query7);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj8 = new gestorBD();
            vlr8 = obj8.generarConsulta(query8);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj9 = new gestorBD();
            vlr9 = obj9.generarConsulta(query9);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int k=0;
        //aqui toca dfinir el tamaño del arreglo de acuerdo a la cantidad de parametros de busqueda sino crear una clase graficadora
        valores = new int[9];
        while(k<valores.length){
            for(int i=0; i < vlr1.length; i++){
                for(int j= 0; j < vlr1.length; j++){
                    String vlr = vlr1[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            
            k++;
            
            for(int i=0; i < vlr2.length; i++){
                for(int j= 0; j < vlr2.length; j++){
                    String vlr = vlr2[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr3.length; i++){
                for(int j= 0; j < vlr3.length; j++){
                    String vlr = vlr3[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr4.length; i++){
                for(int j= 0; j < vlr4.length; j++){
                    String vlr = vlr4[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr5.length; i++){
                for(int j= 0; j < vlr5.length; j++){
                    String vlr = vlr5[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr6.length; i++){
                for(int j= 0; j < vlr6.length; j++){
                    String vlr = vlr6[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr7.length; i++){
                for(int j= 0; j < vlr7.length; j++){
                    String vlr = vlr7[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr8.length; i++){
                for(int j= 0; j < vlr8.length; j++){
                    String vlr = vlr8[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr9.length; i++){
                for(int j= 0; j < vlr9.length; j++){
                    String vlr = vlr9[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
        }
        String[] nombreParametros = {"Sin plan de datos","Plan 100 Megas","Plan 1Gb","Plan 50 Megas","Premium por kilobyte","Plan Ilimitado","Plan 5 Megas","Estandar por kilobyte","Gold por kilobyte"}; 
        controladorDatos objD = new controladorDatos();  
        nombreSerie = objD.getNombreSerie(nombreParametros);
        valorSerie = objD.getDataSerie(valores);
        
        if(tipografica.getSelectedIndex() == 1){
            String titulo2 = "Tendencias de consumo de Planes de Datoss";
            ids = objD.getIdentificadoresTorta(titulo2);
            pie = new graficoTorta(nombreSerie, valorSerie, ids);
            pie.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(pie);
            
            
        }
        
        String cadena = "";
        
        for(int i = 0;i<valorSerie.length;i++){
            
            cadena+=""+nombreSerie[i]+": "+valorSerie[i]+"\n";
      
        
        }

        jTextAreaResultados.setText(cadena);
    }
    
    private void functionGraphEighteenSeries(String query1, String query2, String query3, String query4, String query5, String query6, String query7, String query8, String query9, String query10, String query11, String query12, String query13, String query14, String query15, String query16, String query17, String query18, JComboBox tipografica)
    {
        int[] valores; 
        String[][] vlr1 = null;
        String[][] vlr2 = null;
        String[][] vlr3 = null;
        String[][] vlr4 = null;
        String[][] vlr5 = null;
        String[][] vlr6 = null;
        String[][] vlr7 = null;
        String[][] vlr8 = null;
        String[][] vlr9 = null;
        String[][] vlr10 = null;
        String[][] vlr11 = null;
        String[][] vlr12 = null;
        String[][] vlr13 = null;
        String[][] vlr14 = null;
        String[][] vlr15 = null;
        String[][] vlr16 = null;
        String[][] vlr17 = null;
        String[][] vlr18 = null;
        
        String[] nombreSerie = null;
        int[] valorSerie = null;
        String[] ids = null;
        
        try
        {
            gestorBD obj = new gestorBD();
            vlr1 =  obj.generarConsulta(query1);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj2 = new gestorBD();
            vlr2 = obj2.generarConsulta(query2);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj3 = new gestorBD();
            vlr3 = obj3.generarConsulta(query3);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj4 = new gestorBD();
            vlr4 =  obj4.generarConsulta(query4);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj5 = new gestorBD();
            vlr5 = obj5.generarConsulta(query5);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj6 = new gestorBD();
            vlr6 = obj6.generarConsulta(query6);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj7 = new gestorBD();
            vlr7 =  obj7.generarConsulta(query7);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj8 = new gestorBD();
            vlr8 = obj8.generarConsulta(query8);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj9 = new gestorBD();
            vlr9 = obj9.generarConsulta(query9);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj10 = new gestorBD();
            vlr10 = obj10.generarConsulta(query10);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
         
        try
        {
            gestorBD obj11 = new gestorBD();
            vlr11 = obj11.generarConsulta(query11);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         try
        {
            gestorBD obj12 = new gestorBD();
            vlr12 = obj12.generarConsulta(query12);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         try
        {
            gestorBD obj13 = new gestorBD();
            vlr13 = obj13.generarConsulta(query13);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         
        try
        {
            gestorBD obj14 = new gestorBD();
            vlr14 = obj14.generarConsulta(query14);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj15 = new gestorBD();
            vlr15 = obj15.generarConsulta(query15);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj16 = new gestorBD();
            vlr16 = obj16.generarConsulta(query16);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj17 = new gestorBD();
            vlr17 = obj17.generarConsulta(query17);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj18 = new gestorBD();
            vlr18 = obj18.generarConsulta(query18);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int k=0;
        //aqui toca dfinir el tamaño del arreglo de acuerdo a la cantidad de parametros de busqueda sino crear una clase graficadora
        valores = new int[18];
        while(k<valores.length){
            for(int i=0; i < vlr1.length; i++){
                for(int j= 0; j < vlr1.length; j++){
                    String vlr = vlr1[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            
            k++;
            
            for(int i=0; i < vlr2.length; i++){
                for(int j= 0; j < vlr2.length; j++){
                    String vlr = vlr2[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr3.length; i++){
                for(int j= 0; j < vlr3.length; j++){
                    String vlr = vlr3[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr4.length; i++){
                for(int j= 0; j < vlr4.length; j++){
                    String vlr = vlr4[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr5.length; i++){
                for(int j= 0; j < vlr5.length; j++){
                    String vlr = vlr5[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr6.length; i++){
                for(int j= 0; j < vlr6.length; j++){
                    String vlr = vlr6[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr7.length; i++){
                for(int j= 0; j < vlr7.length; j++){
                    String vlr = vlr7[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr8.length; i++){
                for(int j= 0; j < vlr8.length; j++){
                    String vlr = vlr8[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr9.length; i++){
                for(int j= 0; j < vlr9.length; j++){
                    String vlr = vlr9[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr10.length; i++){
                for(int j= 0; j < vlr10.length; j++){
                    String vlr = vlr10[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr11.length; i++){
                for(int j= 0; j < vlr11.length; j++){
                    String vlr = vlr11[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr12.length; i++){
                for(int j= 0; j < vlr12.length; j++){
                    String vlr = vlr12[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr13.length; i++){
                for(int j= 0; j < vlr13.length; j++){
                    String vlr = vlr13[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr14.length; i++){
                for(int j= 0; j < vlr14.length; j++){
                    String vlr = vlr14[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr15.length; i++){
                for(int j= 0; j < vlr15.length; j++){
                    String vlr = vlr15[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr16.length; i++){
                for(int j= 0; j < vlr16.length; j++){
                    String vlr = vlr16[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr17.length; i++){
                for(int j= 0; j < vlr17.length; j++){
                    String vlr = vlr17[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr18.length; i++){
                for(int j= 0; j < vlr18.length; j++){
                    String vlr = vlr18[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
        }
        String[] nombreParametros = {"telefonica","UNE","telmex","EMCALI","ETB","EPM","Comcel","Movistar",
            "Tigo","ETP","Emtelsa","Avantel","Metrotel","Telebucaramanga","Vodafone","Orange","AT&T","Colmovil"}; 
        controladorDatos objD = new controladorDatos();  
        nombreSerie = objD.getNombreSerie(nombreParametros);
        valorSerie = objD.getDataSerie(valores);
        
        if(tipografica.getSelectedIndex() == 1){
            String titulo2 = "Frecuencia de uso Operadores Nacionales";
            ids = objD.getIdentificadoresTorta(titulo2);
            pie = new graficoTorta(nombreSerie, valorSerie, ids);
            pie.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(pie);  
        }
        
        StringBuilder rts = new StringBuilder();
        rts.append("telefonica: "+valorSerie[0]+"\nUNE: "+valorSerie[1]+"\ntelmex: "+valorSerie[2]+"\nEMCALI: "+valorSerie[3]+"\nETB: "+valorSerie[4]+"\nEPM: "+valorSerie[5]+"\nComcel: "+valorSerie[6]+"\nMovistar: "+
            valorSerie[7]+"\nTigo: "+valorSerie[8]+"\nETP: "+valorSerie[9]+"\nEmtelsa: "+valorSerie[10]+"\nAvantel: "+valorSerie[11]+"\nMetrotel: "+valorSerie[12]+"\nTelebucaramanga: "+valorSerie[13]+"\nVodafone: "+valorSerie[14]+"\nOrange: "+
                valorSerie[15]+"\nAT&T: "+valorSerie[16]+"\nColmovil: "+valorSerie[17]);
        
        jTextAreaResultados.setText(rts.toString());
    }
    
    private void functionGraphFourteenSeries(String query, String query2, String query3, String query4, String query5, String query6, String query7, String query8, String query9, String query10, String query11, String query12, String query13, String query14, JComboBox tipografica){
         int[] valores; 
        String[][] vlr1 = null;
        String[][] vlr2 = null;
        String[][] vlr3 = null;
        String[][] vlr4 = null;
        String[][] vlr5 = null;
        String[][] vlr6 = null;
        String[][] vlr7 = null;
        String[][] vlr8 = null;
        String[][] vlr9 = null;
        String[][] vlr10 = null;
        String[][] vlr11 = null;
        String[][] vlr12 = null;
        String[][] vlr13 = null;
        String[][] vlr14 = null;
        
        String[] nombreSerie = null;
        int[] valorSerie = null;
        String[] ids = null;
        
        try
        {
            gestorBD obj = new gestorBD();
            vlr1 =  obj.generarConsulta(query);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj2 = new gestorBD();
            vlr2 = obj2.generarConsulta(query2);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj3 = new gestorBD();
            vlr3 = obj3.generarConsulta(query3);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj4 = new gestorBD();
            vlr4 =  obj4.generarConsulta(query4);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj5 = new gestorBD();
            vlr5 = obj5.generarConsulta(query5);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj6 = new gestorBD();
            vlr6 = obj6.generarConsulta(query6);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj7 = new gestorBD();
            vlr7 =  obj7.generarConsulta(query7);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj8 = new gestorBD();
            vlr8 = obj8.generarConsulta(query8);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj9 = new gestorBD();
            vlr9 = obj9.generarConsulta(query9);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj10 = new gestorBD();
            vlr10 = obj10.generarConsulta(query10);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
         
        try
        {
            gestorBD obj11 = new gestorBD();
            vlr11 = obj11.generarConsulta(query11);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         try
        {
            gestorBD obj12 = new gestorBD();
            vlr12 = obj12.generarConsulta(query12);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         try
        {
            gestorBD obj13 = new gestorBD();
            vlr13 = obj13.generarConsulta(query13);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         
          try
        {
            gestorBD obj14 = new gestorBD();
            vlr14 = obj14.generarConsulta(query14);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         
        int k=0;
        //aqui toca dfinir el tamaño del arreglo de acuerdo a la cantidad de parametros de busqueda sino crear una clase graficadora
        valores = new int[14];
        while(k<valores.length){
            for(int i=0; i < vlr1.length; i++){
                for(int j= 0; j < vlr1.length; j++){
                    String vlr = vlr1[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            
            k++;
            
            for(int i=0; i < vlr2.length; i++){
                for(int j= 0; j < vlr2.length; j++){
                    String vlr = vlr2[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr3.length; i++){
                for(int j= 0; j < vlr3.length; j++){
                    String vlr = vlr3[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr4.length; i++){
                for(int j= 0; j < vlr4.length; j++){
                    String vlr = vlr4[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr5.length; i++){
                for(int j= 0; j < vlr5.length; j++){
                    String vlr = vlr5[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr6.length; i++){
                for(int j= 0; j < vlr6.length; j++){
                    String vlr = vlr6[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr7.length; i++){
                for(int j= 0; j < vlr7.length; j++){
                    String vlr = vlr7[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr8.length; i++){
                for(int j= 0; j < vlr8.length; j++){
                    String vlr = vlr8[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr9.length; i++){
                for(int j= 0; j < vlr9.length; j++){
                    String vlr = vlr9[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr10.length; i++){
                for(int j= 0; j < vlr10.length; j++){
                    String vlr = vlr10[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr11.length; i++){
                for(int j= 0; j < vlr11.length; j++){
                    String vlr = vlr11[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr12.length; i++){
                for(int j= 0; j < vlr12.length; j++){
                    String vlr = vlr12[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr13.length; i++){
                for(int j= 0; j < vlr13.length; j++){
                    String vlr = vlr13[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
             for(int i=0; i < vlr14.length; i++){
                for(int j= 0; j < vlr14.length; j++){
                    String vlr = vlr14[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
        }
        String[] nombreParametros = {"Total 1600","Gold","Estandar Abierto","Estandar","Total 600 Abierto","Total 1600 Abierto","Casual Abierto","Casual","Premium Abierto","Gold Abierto","Premium","Familia","Familia Abierto","Total 600"}; 
        controladorDatos objD = new controladorDatos();  
        nombreSerie = objD.getNombreSerie(nombreParametros);
        valorSerie = objD.getDataSerie(valores);
        
        if(tipografica.getSelectedIndex() == 1){
            String titulo2 = "Tendencias de consumo de Planes de Voz";
            ids = objD.getIdentificadoresTorta(titulo2);
            pie = new graficoTorta(nombreSerie, valorSerie, ids);
            pie.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(pie);
        }
        
        StringBuilder rts = new StringBuilder();
        rts.append("Total 1600: "+valorSerie[0]+"\nGold: "+valorSerie[1]+"\nEstandar Abierto: "+valorSerie[2]+"\nEstandar: "+valorSerie[3]+"\nTotal 600 Abierto: "+valorSerie[4]+"\nTotal 1600 Abierto: "+
                valorSerie[5]+"\nCasual Abierto: "+valorSerie[6]+"\nCasual: "+valorSerie[7]+"\nPremium Abierto: "+valorSerie[8]+"\nGold Abierto: "+valorSerie[9]+"\nPremium: "+valorSerie[10]+"\nFamilia: "+valorSerie[11]+"\nFamilia Abierto: "+valorSerie[12]+"\nTotal 600: "+valorSerie[13]);
        
        jTextAreaResultados.setText(rts.toString());
    }
     private void functionGraphSixSeries(String query, String query2, String query3, String query4, String query5, String query6, JComboBox tipografica){
        int[] valores; 
        String[][] vlr1 = null;
        String[][] vlr2 = null;
        String[][] vlr3 = null;
        String[][] vlr4 = null;
        String[][] vlr5 = null;
        String[][] vlr6 = null;
        String[] ids = null;
        String[] nombreSerie = null;
        int[] valorSerie = null;
        
        try
        {
            gestorBD obj = new gestorBD();
            vlr1 =  obj.generarConsulta(query);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj2 = new gestorBD();
            vlr2 = obj2.generarConsulta(query2);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj3 = new gestorBD();
            vlr3 = obj3.generarConsulta(query3);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj4 = new gestorBD();
            vlr4 = obj4.generarConsulta(query4);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj5 = new gestorBD();
            vlr5 = obj5.generarConsulta(query5);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj6 = new gestorBD();
            vlr6 = obj6.generarConsulta(query6);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int k=0;
        //aqui toca dfinir el tamaño del arreglo de acuerdo a la cantidad de parametros de busqueda sino crear una clase graficadora
        valores = new int[6];
        while(k < valores.length){
            for(int i=0; i < vlr1.length; i++){
                for(int j= 0; j < vlr1.length; j++){
                    String vlr = vlr1[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            
            k++;
            
            for(int i=0; i < vlr2.length; i++){
                for(int j= 0; j < vlr2.length; j++){
                    String vlr = vlr2[i][j];
                    valores[k] = Integer.parseInt(vlr);                  
                }
            }
            k++;
            
            for(int i=0; i < vlr3.length; i++){
                for(int j= 0; j < vlr3.length; j++){
                    String vlr = vlr3[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            k++;
            
            for(int i=0; i < vlr4.length; i++){
                for(int j= 0; j < vlr4.length; j++){
                    String vlr = vlr4[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            k++;
            
            for(int i=0; i < vlr3.length; i++){
                for(int j= 0; j < vlr3.length; j++){
                    String vlr = vlr3[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            k++;
            
            for(int i=0; i < vlr5.length; i++){
                for(int j= 0; j < vlr5.length; j++){
                    String vlr = vlr5[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            k++;
        }
        String[] nombreParametros = {"Madrugada","Mañana","Media Mañana","Medio Dia","Tarde","Noche"}; 
        controladorDatos objD = new controladorDatos();  
        nombreSerie = objD.getNombreSerie(nombreParametros);
        valorSerie = objD.getDataSerie(valores);
        
        if(tipografica.getSelectedIndex() == 0){  
            String titulo = "Franjas de mayor uso de la Red"; 
            graph = new graficoBarras(titulo, nombreSerie, valorSerie);
            graph.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(graph);  
        }
        if(tipografica.getSelectedIndex() == 1){
            String titulo2 = "Franjas de mayor uso de la Red";
            ids = objD.getIdentificadoresTorta(titulo2);
            pie = new graficoTorta(nombreSerie, valorSerie, ids);
            pie.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(pie);    
        }
        
        StringBuilder rts = new StringBuilder();
        rts.append("Madrugada: "+valorSerie[4]+"\nMañana: "+valorSerie[1]+"\nMedio Dia: "+valorSerie[2]+"\nTarde: "+valorSerie[3]+"\nNoche: "+valorSerie[0]);
        
        jTextAreaResultados.setText(rts.toString());
    }
    private void functionGraphthreeSeries(String query, String query2, String query3, JComboBox tipografica){
        int[] valores; 
        String[][] vlr1 = null;
        String[] nombreSerie = null;
        int[] valorSerie = null;
        String[][] vlr2 = null;
        String[][] vlr3 = null;
        String[] ids = null;
        
        try
        {
            gestorBD obj = new gestorBD();
            vlr1 =  obj.generarConsulta(query);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj2 = new gestorBD();
            vlr2 = obj2.generarConsulta(query2);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj3 = new gestorBD();
            vlr3 = obj3.generarConsulta(query3);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int k=0;
        //aqui toca dfinir el tamaño del arreglo de acuerdo a la cantidad de parametros de busqueda sino crear una clase graficadora
        valores = new int[3];
        while(k<valores.length){
            for(int i=0; i < vlr1.length; i++){
                for(int j= 0; j < vlr1.length; j++){
                    String vlr = vlr1[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            
            k++;
            
            for(int i=0; i < vlr2.length; i++){
                for(int j= 0; j < vlr2.length; j++){
                    String vlr = vlr2[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
            
            for(int i=0; i < vlr3.length; i++){
                for(int j= 0; j < vlr3.length; j++){
                    String vlr = vlr3[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;
        }
        String[] nombreParametros = {"Premium Corporativo","Estandar Corporativo","Gold Corporativo"}; 
        controladorDatos objD = new controladorDatos();  
        nombreSerie = objD.getNombreSerie(nombreParametros);
        valorSerie = objD.getDataSerie(valores);
        
        if(tipografica.getSelectedIndex() == 0){  
            String titulo = "Tendencias de consumo de Planes Corporativos"; 
            graph = new graficoBarras(titulo, nombreSerie, valorSerie);
            graph.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(graph);  
        }
        if(tipografica.getSelectedIndex() == 1){
            String titulo2 = "Tendencias de consumo de Planes Corporativos";
            ids = objD.getIdentificadoresTorta(titulo2);
            pie = new graficoTorta(nombreSerie, valorSerie, ids);
            pie.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(pie);
            
        }
        
        String cadena = "";
        
        for(int i = 0;i<valorSerie.length;i++){
            
            cadena+=""+nombreSerie[i]+": "+valorSerie[i]+"\n";
      
        
        }

        jTextAreaResultados.setText(cadena);
    }
    
    private void FunctionGraphTwoSeries(String query, String query2, JComboBox tipografica, String Nombre, String Nombre2){

        
        
        int[] valores; 
       String[][] vlr1 = null;
        String[] nombreSerie = null;
        int[] valorSerie = null;
        String[][] vlr2 = null;
        String[] ids = null;
        
        try
        {
            gestorBD obj = new gestorBD();
            vlr2 =  obj.generarConsulta(query2);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj2 = new gestorBD();
            vlr1 = obj2.generarConsulta(query);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int k=0;
        //aqui toca dfinir el tamaño del arreglo de acuerdo a la cantidad de parametros de busqueda sino crear una clase graficadora
        valores = new int[2];
        while(k<2){
            for(int i=0; i < vlr1.length; i++){
                for(int j= 0; j < vlr1.length; j++){
                    String vlr = vlr1[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            
            k++;
            
            for(int i=0; i < vlr2.length; i++){
                for(int j= 0; j < vlr2.length; j++){
                    String vlr = vlr2[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;   
        }
        String[] nombreParametros = {Nombre,Nombre2}; 
        controladorDatos objD = new controladorDatos();  
        nombreSerie = objD.getNombreSerie(nombreParametros);
        valorSerie = objD.getDataSerie(valores);
        
        if(tipografica.getSelectedIndex() == 0){  
            String titulo = "Grafico de Barras "+Nombre+" vs "+Nombre2; 
            graph = new graficoBarras(titulo, nombreSerie, valorSerie);
            graph.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(graph);  
        }
        if(tipografica.getSelectedIndex() == 1){
            String titulo2 = "grafico-torta-titulo "+Nombre+" vs "+Nombre2;;
            ids = objD.getIdentificadoresTorta(titulo2);
            pie = new graficoTorta(nombreSerie, valorSerie, ids);
            pie.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(pie);
            
        }
        
        String cadena = "";
        
        for(int i = 0;i<valorSerie.length;i++){
            
            cadena+=""+nombreSerie[i]+": "+valorSerie[i]+"\n";
      
        
        }

        jTextAreaResultados.setText(cadena);

        
}
    
    private void functionGraphuniqueSerie(String query, String query2, JComboBox tipografica, String Nombre, String Nombre2){
    
    
        int[] valores; 
       String[][] vlr1 = null;
        String[] nombreSerie = null;
        int[] valorSerie = null;
        String[][] vlr2 = null;
        String[] ids = null;
        
        try
        {
            gestorBD obj = new gestorBD();
            vlr2 =  obj.generarConsulta(query2);
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try
        {
            gestorBD obj2 = new gestorBD();
            vlr1 = obj2.generarConsulta(query);    
        }
        catch (SQLException ex) {
            Logger.getLogger(userInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int k=0;
        //aqui toca dfinir el tamaño del arreglo de acuerdo a la cantidad de parametros de busqueda sino crear una clase graficadora
        valores = new int[2];
        while(k<2){
            for(int i=0; i < vlr1.length; i++){
                for(int j= 0; j < vlr1.length; j++){
                    String vlr = vlr1[i][j];
                    valores[k] = Integer.parseInt(vlr);
                }
            }
            
            k++;
            
            for(int i=0; i < vlr2.length; i++){
                for(int j= 0; j < vlr2.length; j++){
                    String vlr = vlr2[i][j];
                    valores[k] = Integer.parseInt(vlr);
                   
                }
            }
            k++;   
        }
        String[] nombreParametros = {Nombre,Nombre2}; 
        controladorDatos objD = new controladorDatos();  
        nombreSerie = objD.getNombreSerie(nombreParametros);
        valorSerie = objD.getDataSerie(valores);
        
        if(tipografica.getSelectedIndex() == 0){  
            String titulo = "Grafico de Barras Comparación Perfiles"; 
            graph = new graficoBarras(titulo, nombreSerie, valorSerie);
            graph.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(graph);  
        }
        if(tipografica.getSelectedIndex() == 1){
            String titulo2 = "grafico torta Comparación Perfiles";
            ids = objD.getIdentificadoresTorta(titulo2);
            pie = new graficoTorta(nombreSerie, valorSerie, ids);
            pie.setVisible(true);
            jPContainer.setVisible(true);
            jPContainer.add(pie);
            
        }
        
        String cadena = "";
        
        for(int i = 0;i<valorSerie.length;i++){
            
            cadena+=""+nombreSerie[i]+": "+valorSerie[i]+"\n";
      
        
        }

        jTextAreaResultados.setText(cadena);

    
    }
    
    private String obtenerFecha(JDateChooser fecha){
        
        int dia=0, mes=0, ano=0;
        dia = fecha.getCalendar().get(Calendar.DATE);
        mes = fecha.getCalendar().get(Calendar.MONTH)+1;
        ano = fecha.getCalendar().get(Calendar.YEAR);
        
        if(ano <= 2009 && ano >= 2001){
    
       return  ano+""+mes+""+dia;
        
        }else{
        
            return "error";
            
        }
    
    
    }
    
    private String[] obtenerEdad(String cadena){
    
        String[] edades = new String[2];
        
        StringTokenizer st = new StringTokenizer(cadena,"-");
        
        int i = 0;
        
        while(st.hasMoreTokens()){
        
        edades[i] = st.nextToken();
        
        i++;
        
        }
    
    
    return edades;
    
    }
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                //System.out.println("preuaba para mostrar en consola las consultas");
                
                new userInterface().setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser FechafinPerfil;
    private com.toedter.calendar.JDateChooser Fechafinplan;
    private com.toedter.calendar.JDateChooser FechainicioPerfil;
    private com.toedter.calendar.JDateChooser Fechainicioplan;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonLlamadaReset;
    private javax.swing.JButton jButtonLlamadaResultado;
    private javax.swing.JButton jButtonPerfilReset;
    private javax.swing.JButton jButtonPerfilResultado;
    private javax.swing.JButton jButtonPlanesReset;
    private javax.swing.JButton jButtonPlanesResultado;
    private javax.swing.JCheckBox jChecPerfilCausa;
    private javax.swing.JCheckBox jCheckLlamadasFecha;
    private javax.swing.JCheckBox jCheckPerfilFecha;
    private javax.swing.JCheckBox jCheckPlanesFecha;
    private javax.swing.JComboBox jComboGraficaLlamada;
    private javax.swing.JComboBox jComboGraficaPerfil;
    private javax.swing.JComboBox jComboGraficaPlan;
    private javax.swing.JComboBox jComboLlamadaAno;
    private javax.swing.JComboBox jComboLlamadaDia;
    private javax.swing.JComboBox jComboLlamadaFiltro;
    private javax.swing.JComboBox jComboLlamadaMes;
    private javax.swing.JComboBox jComboLlamadasCriterio;
    private javax.swing.JComboBox jComboNumPerfil;
    private javax.swing.JComboBox jComboPerfilCriterio;
    private javax.swing.JComboBox jComboPerfilEdad;
    private javax.swing.JComboBox jComboPerfilEstado;
    private javax.swing.JComboBox jComboPerfilEstrato;
    private javax.swing.JComboBox jComboPerfilFiltro;
    private javax.swing.JComboBox jComboPerfilGenero;
    private javax.swing.JComboBox jComboPerfilOpciones;
    private javax.swing.JComboBox jComboPlanesAno;
    private javax.swing.JComboBox jComboPlanesCriterio;
    private javax.swing.JComboBox jComboPlanesFiltro;
    private javax.swing.JComboBox jComboPlanesMes;
    private javax.swing.JFileChooser jFCExplorador;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabeInicioPlan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelPlanCriterio;
    private javax.swing.JMenu jMEdit;
    private javax.swing.JMenu jMFile;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    public javax.swing.JPanel jPContainer;
    private javax.swing.JPanel jPContratos;
    public javax.swing.JPanel jPControl;
    private javax.swing.JPanel jPFechas;
    private javax.swing.JPanel jPRecargas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTPControles;
    private javax.swing.JTextArea jTextAreaResultados;
    // End of variables declaration//GEN-END:variables
}
